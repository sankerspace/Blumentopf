Controller should work on a Particle Photon, but also can run an Arduino
Here you can find a description how to prepare/compile to run the Controller.ino
on a Particle Photon

Configuration on the breadboard:
-Particle Photon
-DS3231 Real Time Controller
-nRF24L01+ 

Pin Configuration:
  rf-Gnd/Pin1 to ground-breadboard
  rf-Vcc/Pin2 to  3,3v-breadboard
  rf-CE/Pin3 to   D6-photon
  rf-CS/Pin4 to   A2-photon
  rf-SCK/Pin5 to  A3-photon
  rf-MOSI/Pin6 to A5-photon
  rf-MISO/Pin7 to A4-photon

  DS3231/VCC  to   3,3v-breadboard
  DS3231/Gnd  to   Ground-breadboard
  DS3231/SCL  to   D0-photon  
  DS3231/SDA  to   D1-photon
  
  
1)  Prepare Atom IDE (half online/ half offline)

  https://atom.io/packages/particle-dev
 
2) Create Symbolic Links to all cpp and h files necessary for controller.ino
    
    Start bash script <path-to_repo>/Doku/Particle/createSymbols.sh
    which automatically creates alls symbol links to these files 
    inside folder  <path-to_repo>/Controller 
 
3)  Include R24 Lib and use firmware version 0.6.0 particle dev 

  Our Library Rf24 in folder libraries has no compability for Spark processors,
  in order we have to introduce the "particle-rf24" library from 
  particle public libraries  
  -> include in project-properties : dependencies.particle-rf24=0.0.2
      in a new line
      
  some compile errors occured in photon firmware version 0.6.1,
  so i cannot choose the most actual firmware version and have to
  compile for version 0.6.0
   
4) Use particle-cli (for use on command line and with better error output)

    sudo npm install -g particle-cli
   
  but you have to install nodejs before!
  
  
  
  Tips Atom IDE:
  
    packets you should install: 
    (https://benmccormick.org/2016/01/11/the-most-interesting-atom-packages-ive-found-so-far/)
    git-time-machine
    language-particle
    todo-show  
    git-plus
    autocomplete
    autocomplete-clang
    autocomplete-paths
    minimap
  
